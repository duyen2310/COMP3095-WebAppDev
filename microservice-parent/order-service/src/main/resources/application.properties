spring.application.name=order-service

server.port=8082

order-service.version=v1.0

#Postgres Local configuration
spring.datasource.url=jdbc:postgresql://localhost:5433/order-service

#Postgres Configuration
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=none
inventory.service.url=http://localhost:8083

# Web based documentation - http://localhost:8082/swagger-ui
springdoc.swagger-ui.path=/swagger-ui

# Json based documentation- http://localhost:8082/api-docs
springdoc.api-docs.path=/api-docs

# Resilience4j
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

resilience4j.timelimiter.instances.inventory.timeout-duration=3s
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5

resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=2s

# KAFKA Properties
# The address of the kafka broker
spring.kafka.bootstrap-servers=localhost:9092
# the default topic where messages will be sent if not explicitly specified
spring.kafka.template.default-topic=order-placed

# the serializer call used for serializing he key for the kafka messages
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# the serializer call used of serializing the value of the messages to the kafka
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:ca.gbc.orderservice.event.OrderPlacedEvent